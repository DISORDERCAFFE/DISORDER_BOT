import os
import asyncio
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters
from deepseek_api import ask_mudrets  # –ú–æ–π –º–æ–¥—É–ª—å –¥–ª—è DeepSeek

# –°—Ç–∏–ª—å–Ω–∞—è –∫–ª–∞–≤–∞
KEYBOARD = [
    ["üìú –ü—Ä–∞–≤–∏–ª–∞", "‚ö°Ô∏è –§–∏—à–∫–∏"],
    ["üßô‚Äç‚ôÇÔ∏è –°–ø—Ä–æ—Å–∏—Ç—å –ú—É–¥—Ä–µ—Ü–æ–≤", "üéµ –ù–∞–π—Ç–∏ —Ç—Ä–µ–∫"],
    ["üìÆ –ö–∏–Ω—É—Ç—å –º–µ—Å—Å–µ–¥–∂ –≤ –ö–∞—Ñ–µ—à–∫—É"]
]

async def start(update: Update, context):
    await update.message.reply_text(
        "üçµ –ô–æ—É! –Ø –±–æ—Ç –æ—Ç DISORDER CAFFE\n–í—ã–±–∏—Ä–∞–π –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=ReplyKeyboardMarkup(KEYBOARD, resize_keyboard=True)
    )

async def handle_msg(update: Update, context):
    user = update.effective_user  # –õ–æ–≤–∏–º –≤—Å—é –∏–Ω—Ñ—É –æ —é–∑–µ—Ä–µ
    msg = update.message.text

    if msg == "üìú –ü—Ä–∞–≤–∏–ª–∞":
        await update.message.reply_text("1. –ù–µ —Å–ø–∞–º–∏—Ç—å\n2. –ß—Ç–∏—Ç—å –£—Å—Ç–∞–≤ –ö–∞—Ñ–µ")

    elif msg == "‚ö°Ô∏è –§–∏—à–∫–∏":
        await update.message.reply_text("–Ø —É–º–µ—é:\n- –ì—Ä—É–∑–∏—Ç—å —Ç—Ä–µ–∫–∏\n- –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –ú—É–¥—Ä–µ—Ü–∞–º–∏\n- –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å –º–µ—Å—Å–µ–¥–∂–∏")

    elif msg == "üßô‚Äç‚ôÇÔ∏è –°–ø—Ä–æ—Å–∏—Ç—å –ú—É–¥—Ä–µ—Ü–æ–≤":
        await update.message.reply_text("–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –ú—É–¥—Ä–µ—Ü–∞–º –í–æ—Å—Ç–æ–∫–∞:")
        context.user_data["awaiting_question"] = True

    elif msg == "üéµ –ù–∞–π—Ç–∏ —Ç—Ä–µ–∫":
        await update.message.reply_text("–ö–∏–¥–∞–π –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:")
        context.user_data["awaiting_song"] = True

    elif msg == "üìÆ –ö–∏–Ω—É—Ç—å –º–µ—Å—Å–µ–¥–∂ –≤ –ö–∞—Ñ–µ—à–∫—É":
        await update.message.reply_text("–ß—ë –ø–µ—Ä–µ–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞–º? –ü–∏—à–∏:")
        context.user_data["awaiting_feedback"] = True

    elif context.user_data.get("awaiting_question"):
        answer = await ask_mudrets(msg)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ú—É–¥—Ä–µ—Ü–∞–º
        await update.message.reply_text(f"üßô‚Äç‚ôÇÔ∏è –û—Ç–≤–µ—Ç –ú—É–¥—Ä–µ—Ü–æ–≤:\n\n{answer}")
        context.user_data["awaiting_question"] = False

    elif context.user_data.get("awaiting_song"):
        # –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–∏—Å–∫ –º—É–∑—ã–∫–∏
        await update.message.reply_text(f"üîä –ò—â—É: {msg}...")
        await update.message.reply_text("üéß –í–æ—Ç —á—Ç–æ –Ω–∞—à—ë–ª: [—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–∫]")
        context.user_data["awaiting_song"] = False

    elif context.user_data.get("awaiting_feedback"):
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç—á—ë—Ç –æ —é–∑–µ—Ä–µ
        user_info = f"""
        ‚ö†Ô∏è –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –û–¢ –Æ–ó–ï–†–ê ‚ö†Ô∏è
        ‚îú ID: {user.id}
        ‚îú –Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username}
        ‚îú –ò–º—è: {user.full_name}
        ‚îú –Ø–∑—ã–∫: {user.language_code}
        ‚îú –†–µ–≥–∞: {user.link}
        ‚îî –°–æ–æ–±—â–µ–Ω–∏–µ: {msg}
        """
        await context.bot.send_message(
            chat_id=os.getenv("ADMIN_ID"),
            text=user_info
        )
        await update.message.reply_text("‚úÖ –ú–µ—Å—Å–µ–¥–∂ –¥–æ–ª–µ—Ç–µ–ª –¥–æ –ö–∞—Ñ–µ—à–∫–∏!")
        context.user_data["awaiting_feedback"] = False

if __name__ == "__main__":
    app = Application.builder().token(os.getenv("BOT_TOKEN")).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT, handle_msg))
    app.run_polling()